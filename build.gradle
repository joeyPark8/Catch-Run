plugins {
    id 'java'
}

group = 'com.github.joeyPark8'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }

    maven { url = uri("https://repo.codemc.org/repository/maven-public/") }

    repositories {
        mavenCentral()
        maven { url = "https://repo.codemc.org/repository/maven-public/" }
    }


    maven { url = "https://maven.enginehub.org/repo/" }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    compileOnly("io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT")

    compileOnly "dev.jorel:commandapi-bukkit-core:9.5.0"


    compileOnly "com.sk89q.worldedit:worldedit-bukkit:7.2.20"
    //9.5.1
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
